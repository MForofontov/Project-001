version: '3.8'

services:

  nginx:
    image: nginx:latest
    container_name: nginx_vite_app
    ports:
      - "80:80" # Map port 80 of the host to port 80 of the container
    volumes:
      - ./vite-app/dist:/usr/share/nginx/html # Mount the built app
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf # Mount custom Nginx config
    restart: always # Restart service always

  frontend:
    build:
      context: ./react_frontend
    container_name: react_frontend
    ports:
      - '5173:5173'
    volumes:
      - ./Frontend:/react_frontend_docker
    command: npm run dev -- --host 0.0.0.0
    user: "${UID}:${GID}"
    networks:
      - app-network

  user_management_service:
    build:
      context: ./user_management_service
    container_name: user_management_service
    env_file:
      - .env
    ports:
      - '8000:8000'
    volumes:
      - ./user_management_service:/user_management_service_docker
    user: "${UID}:${GID}"
    depends_on:
      - db_user_management_service
    networks:
      - app-network

  data_processing_service:
    build:
      context: ./data_processing_service
    container_name: data_processing_service
    env_file:
      - .env
    ports:
      - '8001:8001'
    volumes:
      - ./data_processing_service:/data_processing_service_docker
    user: "${UID}:${GID}"
    depends_on:
      - db_data_processing_service
      - data_processing_service_redis
    networks:
      - app-network

  db_user_management_service:
    image: postgres:latest
    container_name: db_user_management_service
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER_UMS}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_UMS}
      - POSTGRES_DB=${POSTGRES_DB_UMS}
      - PGPORT=${DB_PORT_UMS}
    volumes:
      - postgres_data_user_management:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - app-network
  
  db_data_processing_service:
    image: postgres:latest
    container_name: db_data_processing_service
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER_DPS}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_DPS}
      - POSTGRES_DB=${POSTGRES_DB_DPS}
      - PGPORT=${DB_PORT_DPS}
    volumes:
      - postgres_data_data_processing:/var/lib/postgresql/data
    ports:
      - '5433:5433'
    networks:
      - app-network

  data_processing_service_redis:
    image: redis:latest
    container_name: data_processing_service_redis
    ports:
      - '6379:6379'
    networks:
      - app-network

  data_processing_service_celery:
    build:
      context: ./data_processing_service
    container_name: data_processing_service_celery
    env_file:
      - .env
    volumes:
      - ./data_processing_service:/data_processing_service_docker
    depends_on:
      - db_data_processing_service
      - data_processing_service_redis
    networks:
      - app-network
    command: celery -A Backend worker --loglevel=info

volumes:
  postgres_data_user_management:
  postgres_data_data_processing:

networks:
  app-network:
    driver: bridge
