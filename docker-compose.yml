version: '3.8'

services:
  frontend:
    build:
      context: ./Frontend
    container_name: frontend_mn_003_docker
    ports:
      - '5173:5173'
    volumes:
      - ./Frontend:/Frontend_docker  # Mount the frontend directory for live code updates
    command: npm run dev -- --host 0.0.0.0 # Start and expose the Vite development server to network
    user: "${UID}:${GID}"  # Run as the current user
    networks:
      - app-network

  user_management_service:
    build:
      context: ./user_management_service
    container_name: user_management_service
    env_file:
      - .env
    ports:
      - '8000:8000'
    volumes:
      - ./user_management_service:/user_management_service_docker  # Mount the backend directory for live code updates
    user: "${UID}:${GID}"  # Run as the current user
    depends_on:
      - db_user_management_service
    networks:
      - app-network

  data_processing_service:
    build:
      context: ./data_processing_service
    container_name: data_processing_service
    env_file:
      - .env
    ports:
      - '8001:8001'
    volumes:
      - ./data_processing_service:/data_processing_service_docker  # Mount the backend directory for live code updates
    user: "${UID}:${GID}"  # Run as the current user
    depends_on:
      - db_data_processing_service
      - redis
    networks:
      - app-network

  db_user_management_service:
    image: postgres:latest
    container_name: db_user_management_service
    env_file:
      - .env
    volumes:
      - postgres_data_user_management:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - app-network
  
  db_data_processing_service:
    image: postgres:latest
    container_name: db_data_processing_service
    env_file:
      - .env
    volumes:
      - postgres_data_data_processing:/var/lib/postgresql/data
    ports:
      - '5433:5433'
    networks:
      - app-network

  data_processing_service_redis:
    image: redis:latest
    container_name: data_processing_service_redis
    ports:
      - '6379:6379'
    networks:
      - app-network

  data_processing_service_celery:
    build:
      context: ./Backend
    container_name: data_processing_service_celery
    env_file:
      - .env
    volumes:
      - ./data_processing_service:/data_processing_service_docker  # Mount the backend directory for live code updates
    depends_on:
      - db_data_processing_service
      - redis
    networks:
      - app-network
    command: celery -A Backend worker --loglevel=info

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
